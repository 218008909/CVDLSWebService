@page
@model CVDLS.Pages.Stock.IndexModel

@{
    ViewData["Title"] = "Index";
}

@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<h1>Index</h1>
<!--Check if user has management privileges-->
@if (SignInManager.IsSignedIn(User))
{
    if (User.Identity.Name.Contains("manager"))
    {
        <!--Provide option to add to table-->
        <p>
            <a asp-page="Create">Create New</a>
        </p>
    }
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Stock[0].Batch)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock[0].VaccineType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock[0].ExpiryDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock[0].Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock[0].TagID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock[0].Condition)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock[0].Destination)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Stock)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Batch)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VaccineType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExpiryDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TagID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Condition)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Destination)
                </td>
                <!--Check if user has management privileges-->
                @if (SignInManager.IsSignedIn(User))
                {
                    if (User.Identity.Name.Contains("manager"))
                    {
                        <!--Provide additional actions-->
                        <td>
                            <a asp-page="./Edit" asp-route-id="@item.StockID">Edit</a> |
                            <a asp-page="./Details" asp-route-id="@item.StockID">Details</a> |
                            <a asp-page="./Delete" asp-route-id="@item.StockID">Delete</a>
                        </td>
                    }
                }
            </tr>
        }
    </tbody>
</table>
}
else
{
    <div>
        <!--Provide links for unidentified users-->
        <p>
            Please <a href=Identity/Account/Login>log in</a> or <a href="Identity/Account/Register">register</a> to see if you have permission to take this action.
        </p>
    </div>
}